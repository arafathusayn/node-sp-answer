!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).spAnswer=e()}}((function(){return function e(r,n,t){function o(f,u){if(!n[f]){if(!r[f]){var a="function"==typeof require&&require;if(!u&&a)return a(f,!0);if(i)return i(f,!0);var s=new Error("Cannot find module '"+f+"'");throw s.code="MODULE_NOT_FOUND",s}var p=n[f]={exports:{}};r[f][0].call(p.exports,(function(e){return o(r[f][1][e]||e)}),p,p.exports,e,r,n,t)}return n[f].exports}for(var i="function"==typeof require&&require,f=0;f<t.length;f++)o(t[f]);return o}({1:[function(e,r,n){"use strict";var t=this&&this.__assign||function(){return(t=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var o in r=arguments[n])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(e){var r,n={text:e.question&&e.question.text||""},o=e.answers.length,i=e.answers,f=0,u=!1;"number"==typeof e.threshold&&(f=e.threshold);for(var a=0;a<o;a++){if(!e.answers||"boolean"!=typeof e.answers[a].positive||"boolean"!=typeof e.answers[a].popular){u=!1;break}u=!0}if(u){for(var s=0,p=0,l=0,d=0,v=0,c=i;v<c.length;v++){!0===(q=c[v]).positive?s++:l++,!0===q.popular?p++:d++}return s-p-(l-d)>=f?{answer:!0,question:n}:{answer:!1,question:n}}if(i.find((function(e){return"string"!=typeof e.positive||"string"!=typeof e.popular})))return null;var w=i.reduce((function(e,r){var n=r.positive&&r.positive.toString()||"";return void 0===e[n]?e[n]=1:e[n]+=1,e}),{}),y=i.reduce((function(e,r){var n=r.popular&&r.popular.toString()||"";return void 0===e[n]?e[n]=1:e[n]+=1,e}),{}),h={};for(var g in y)if(""===g)return null;for(var g in w){if(""===g)return null;h=t(t({},h),((r={})[g]=w[g]-(y[g]||0),r))}var b=[];for(var q in h)for(var x in h){var m=h[q]-h[x];m>=f&&b.push({answer:q,diff:m})}var O=Math.max.apply(Math,b.map((function(e){return e.diff}))),_=Array.from(new Set(b.filter((function(e){return e&&e.diff===O})).map((function(e){return e&&e.answer}))));return 1===_.length?{answer:_[0],question:n}:{answer:_,question:n}};r.exports=o,n.default=o},{}]},{},[1])(1)}));